import mysql.connector as mysqlconnex
from mysql_db_access.mysqldb_credentials import Credentials
from datetime import datetime
def CreateConnection(creds: Credentials):
    connection = None
    try:
        connection = mysqlconnex.connect(
            host = creds.HOST_NAME,
            user = creds.USER_NAME,
            passwd = creds.USER_PASSWORD,
            database = creds.database
        )
        print(f'Connection to the {creds.database} database was successful')
    except mysqlconnex.Error as e:
        print(f'Connection to the {creds.database} database was unsuccessful. Error: {e}')
    
    return connection
 

def bannedPhrases():
    banned_list = []

    connex = CreateConnection(Credentials('bloggit-db'))

    if connex != None:
        try:
            cursor = connex.cursor(dictionary=True)
            cursor.callproc('banned_phrases')

            for result in cursor.stored_results():
                for i in result.fetchall():
                    banned_list.append(i['banned_keyword'])

            return banned_list
        except Exception as e:
            return None

    connex.close()   

def InsertUsers(parameter_dict: dict):
    banned_list = []

    connex = CreateConnection(Credentials('bloggit-db'))

    if connex != None:
        try:
            cursor = connex.cursor()
            start_date = datetime(2020, 1, 1)
            end_date = datetime(2020, 1, 31)
            result = cursor.callproc('create_user', 
                                    [106, 
                                    'aamer', 
                                    'aam', 
                                    'moha', 
                                    'sdaihdj', 
                                    'ffasdf', 
                                    start_date, 
                                    end_date, 
                                    None, 
                                    None, 
                                    'gog'])
            connex.commit()

            return result
        except Exception as e:
            return e

    connex.close()

insertUser = InsertUsers({})
print(insertUser)